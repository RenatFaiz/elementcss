// _list.scss provides functions for working with lists. Note that in Sass the first
// index of list item is 1 and not 0.

// slice
// returns new list with items from $list splitted by $start and $end indexes. When
// $start is greater than $end it returns list without items between $start and $end.
//          1 2 3 4
//    slice(a b c d, 2)       -> b c d
//    slice(a b c d, 2, 3)    -> b c
//    slice(a b c d, $end:3)  -> a b c
//    slice(a b c d, 4, 2)    -> a b d  (no items b/w 2 and 4)
//    slice(a b c d, 3, 1)    -> a c d  (no items b/w 1 and 3)
@function slice($list, $start:1, $end:length($list)) {
  $res: ();
  @if length($list) < $start {
    @return $res;
  }
  @if $start <= $end {
    @for $i from 1 through length($list) {
      @if $i >= $start and $i <= $end {
        $res: append($res, nth($list, $i));
      }
    }
  } @else {
    @for $i from 1 through length($list) {
      @if $i <= $end or $i >= $start {
        $res: append($res, nth($list, $i));
      }
    }
  }
  @return $res;
}

// nth-retrieve
// returns new list with items from $list by $indexes.
//    nth-retrieve(a b c d, 1 2)          -> a b
//    nth-retrieve(a b c d, 3 1 6)        -> c a
//    nth-retrieve(a b c d, 1 3 4, comma) -> a, c, d
@function nth-retrieve($list, $indexes, $separator:auto) {
  $res: ();
  @each $i in $indexes {
    @if $i and $i <= length($list) {
      $res: append($res, nth($list, $i), $separator);
    }
  }
  @return $res;
}

// nth-remove
// returns new list excluding items by $indexes.
//    nth-remove(a b c d, 2)        -> a c d
//    nth-remove(a b c d, 3 2)      -> a d
//    nth-remove(a b c d, 1, comma) -> b, c, d
@function nth-remove($list, $indexes, $separator:auto) {
  $res: ();
  @for $i from 1 through length($list) {
    @if index($indexes, $i) == null {
      $res: append($res, nth($list, $i), $separator);
    }
  }
  @return $res;
}

// value-remove
// returns new list without an item removed by $val name.
//    value-remove(a b c d, c)            -> a b d
//    value-remove(a b c (d e), a (d e))  -> b c
//    value-remove(a b c d, b, comma)     -> a, c, d
@function value-remove($list, $vals, $separator:auto) {
  $res: ();
  @each $list-val in $list {
    @if index($vals, $list-val) == null {
      $res: append($res, $list-val, $separator);
    }
  }
  @return $res;
}
