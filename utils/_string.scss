// _string.scss description

// _
// prefixer & postfixer (with validation)
// Because of frequent use the functions have very short name.
// Prepend prefix for given $value if it isn't equal to $exception
//    _(inline, '-')      -> -inline
//    _(null, '-')        -> null
//    _(null, '-', true)  -> -
@function _($value, $prefix:'-', $prependOnNull:false, $exception:default, $ifException:null) {
  @return if($value == $exception, $ifException, if($value, #{$prefix}#{$value}, if($prependOnNull, #{$prefix}, null)));
}

// __
// appends postfix for given $value if it isn't equal to $exception
//    __(inline, '-')     -> inline-
//    __(null, '-')       -> null
//    __(null, '-', true) -> -
@function __($value, $postfix:'-', $appendOnNull:false, $exception:default, $ifException:null) {
  @return if($value == $exception, $ifException, if($value, #{$value}#{$postfix}, if($appendOnNull, #{$postfix}, null)));
}

// str-exist
// check if word exists in the string.
// Return null if word doesn't exists else return 1
// or index of char (if length of word == 1)
// TODO(timur): fix
@function str-exists($string, $word) {
  // quote to prevent evaluating input strings as CSS values
  $string: quote($string);
  $word: quote($word);
  $word-length: str-length($word);
  @if $word-length <= str-length($string) {
    @if $word-length > 1 {
      $next: 0;
      @for $i from 1 through $word-length {
        $letter: str-slice($word, $i, $i);
        $curr: str-index($string, $letter);
        @if $curr == null {
          @return null;
        }
        @if $i > 1 and $next - $curr != -1 {
          @return null;
        }
        $next: str-index($string, $letter);
        @if $next == null {
          @return null;
        }
      }
      @return true;
    } @else if $word-length == 1 {
      @return str-index($string, $word);
    } @else {
      @return null;
    }
  }
  @return null;
}
